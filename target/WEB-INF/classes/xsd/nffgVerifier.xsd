<?xml version="1.0" encoding="UTF-8"?>

<!-- This XSD file was developed by Francesco Longo for the Assignment 3a-b 
	of the course Distributed Programming II in Politechnic University of Turin. -->

<!-- IN THE APP VERIFY NODE FROM POLICY REFERRING TO A CORRECT NODE OF THE 
	SPECIFED NFFG -->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:flo="https://france193.wordpress.com" targetNamespace="https://france193.wordpress.com"
            elementFormDefault="qualified">

    <!-- SINGLE ELEMENT -->
    <!-- nffg -->
    <xsd:element name="FLNffg">
        <xsd:complexType>
            <xsd:sequence>
                <!-- NODE -->
                <xsd:element ref="flo:FLNode" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:attribute name="id" type="xsd:string" use="optional"/>
            <xsd:attribute name="name" type="flo:name" use="required"/>
            <xsd:attribute name="last_updated_time" type="xsd:dateTime"
                           use="required"/>
        </xsd:complexType>

        <!-- Uniqueness of Link -->
        <xsd:key name="FLLink_nffg_id">
            <xsd:selector xpath="flo:FLNode/flo:FLLink"/>
            <xsd:field xpath="@name"/>
        </xsd:key>

        <!-- Uniqueness of Link -->
        <xsd:key name="FLNode_nffg_id">
            <xsd:selector xpath="flo:FLNode"/>
            <xsd:field xpath="@name"/>
        </xsd:key>

        <!-- in FLLink, destination_node must refers to an existing node -->
        <xsd:keyref name="FLLink_refers_to_node" refer="flo:FLNode_nffg_id">
            <xsd:selector xpath="flo:FLNode/flo:FLLink"/>
            <xsd:field xpath="@destination_node"/>
        </xsd:keyref>

    </xsd:element>

    <!-- node -->
    <xsd:element name="FLNode">
        <xsd:complexType>
            <xsd:sequence>
                <!-- LINK -->
                <xsd:element name="FLLink" minOccurs="0" maxOccurs="unbounded">
                    <xsd:complexType>
                        <xsd:attribute name="name" type="flo:name" use="required"/>
                        <xsd:attribute name="destination_node" type="xsd:string"
                                       use="required"/>
                    </xsd:complexType>
                </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="id" type="xsd:string" use="optional"/>
            <xsd:attribute name="name" type="flo:name" use="required"/>
            <xsd:attribute name="functional_type" type="flo:FLNodeFunctionalType"
                           use="optional"/>
        </xsd:complexType>

        <!-- Uniqueness of Link -->
        <xsd:key name="FLLink_id">
            <xsd:selector xpath="flo:FLLink"/>
            <xsd:field xpath="@name"/>
        </xsd:key>

    </xsd:element>

    <!-- policy -->
    <xsd:element name="FLPolicy">
        <xsd:complexType>
            <xsd:sequence>
                <!-- TRAVERSED NODE -->
                <xsd:element name="traversed_node" type="flo:FLNodeFunctionalType"
                             minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element ref="flo:FLVResult" minOccurs="0"
                             maxOccurs="1"/>
            </xsd:sequence>
            <xsd:attribute name="name" type="flo:name" use="required"/>
            <xsd:attribute name="nffg_name" type="xsd:string" use="optional"/>
            <xsd:attribute name="isPositive" type="xsd:boolean"
                           use="optional"/>
            <xsd:attribute name="source_node" type="xsd:string"
                           use="optional"/>
            <xsd:attribute name="destination_node" type="xsd:string"
                           use="optional"/>
        </xsd:complexType>
    </xsd:element>

    <!-- vresult -->
    <xsd:element name="FLVResult">
        <xsd:complexType>
            <xsd:attribute name="policy" type="flo:name" use="required"/>
            <xsd:attribute name="result" type="xsd:boolean" use="optional"/>
            <xsd:attribute name="time" type="xsd:dateTime" use="optional"/>
            <xsd:attribute name="message" type="xsd:string" use="optional"/>
        </xsd:complexType>
    </xsd:element>

    <!-- COLLECTION OF ELEMENTS -->
    <!-- nffgs -->
    <xsd:element name="FLNffgs">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="flo:FLNffg" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element ref="flo:FLPolicy" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element ref="flo:FLVResult" minOccurs="0"
                             maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>

        <!-- Uniqueness of Nffg -->
        <xsd:key name="FLNffg_id">
            <xsd:selector xpath="flo:FLNffg"/>
            <xsd:field xpath="@name"/>
        </xsd:key>

        <!-- Uniqueness of FLVResult -->
        <xsd:key name="FLVResult_nffgs_id">
            <xsd:selector xpath="flo:FLVResult"/>
            <xsd:field xpath="@policy"/>
        </xsd:key>

        <!-- Uniqueness of FLPolicy -->
        <xsd:key name="FLPolicy_nffgs_id">
            <xsd:selector xpath="flo:FLPolicy"/>
            <xsd:field xpath="@name"/>
        </xsd:key>

        <!-- in FLPolicy, nffg_name must refers to an existing nffg -->
        <xsd:keyref name="FLPolicy_refers_to_nffg" refer="flo:FLNffg_id">
            <xsd:selector xpath="flo:FLPolicies/flo:FLPolicy"/>
            <xsd:field xpath="@nffg_name"/>
        </xsd:keyref>

        <!-- FLVResult must refers to an existing policy -->
        <xsd:keyref name="FLVResult_nffgs_refers_to_FLPolicy"
                    refer="flo:FLPolicy_nffgs_id">
            <xsd:selector xpath="flo:FLVResult"/>
            <xsd:field xpath="@policy"/>
        </xsd:keyref>

    </xsd:element>

    <!-- nodes -->
    <xsd:element name="FLNodes">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="flo:FLNode" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>

        <!-- Uniqueness of Node -->
        <xsd:key name="FLNode_id">
            <xsd:selector xpath="flo:FLNode"/>
            <xsd:field xpath="@name"/>
        </xsd:key>

    </xsd:element>

    <!-- policies -->
    <xsd:element name="FLPolicies">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="flo:FLPolicy" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element ref="flo:FLVResult" minOccurs="0"
                             maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>

        <!-- Uniqueness of FLPolicy -->
        <xsd:key name="FLPolicy_id">
            <xsd:selector xpath="flo:FLPolicy"/>
            <xsd:field xpath="@name"/>
        </xsd:key>

        <!-- FLVResult must refers to an existing policy -->
        <xsd:keyref name="FLVResult_refers_to_FLPolicy" refer="flo:FLPolicy_id">
            <xsd:selector xpath="flo:FLVResults/flo:FLVResult"/>
            <xsd:field xpath="@policy"/>
        </xsd:keyref>

    </xsd:element>

    <!-- vresults -->
    <xsd:element name="FLVResults">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="flo:FLVResult" minOccurs="0"
                             maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>

        <!-- Uniqueness of FLVResult -->
        <xsd:key name="FLVResult_id">
            <xsd:selector xpath="flo:FLVResult"/>
            <xsd:field xpath="@policy"/>
        </xsd:key>

    </xsd:element>

    <!-- OTHER TYPES -->
    <xsd:simpleType name="FLNodeFunctionalType">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="CACHE"/>
            <xsd:enumeration value="DPI"/>
            <xsd:enumeration value="FW"/>
            <xsd:enumeration value="MAIL_CLIENT"/>
            <xsd:enumeration value="MAIL_SERVER"/>
            <xsd:enumeration value="NAT"/>
            <xsd:enumeration value="SPAM"/>
            <xsd:enumeration value="VPN"/>
            <xsd:enumeration value="WEB_CLIENT"/>
            <xsd:enumeration value="WEB_SERVER"/>
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="name">
        <xsd:restriction base="xsd:string">
            <xsd:pattern value="([A-Z]|[a-z])(\w)+"/>
        </xsd:restriction>
    </xsd:simpleType>

</xsd:schema>